type token =
  | UNIT of (Mini_ml_types.sref)
  | TRUE of (Mini_ml_types.sref)
  | FALSE of (Mini_ml_types.sref)
  | PLUS of (Mini_ml_types.sref)
  | MINUS of (Mini_ml_types.sref)
  | TIMES of (Mini_ml_types.sref)
  | DIVIDE of (Mini_ml_types.sref)
  | LPAREN of (Mini_ml_types.sref)
  | RPAREN of (Mini_ml_types.sref)
  | COMMA of (Mini_ml_types.sref)
  | ARROW of (Mini_ml_types.sref)
  | SEMICOLON of (Mini_ml_types.sref)
  | EQ of (Mini_ml_types.sref)
  | NE of (Mini_ml_types.sref)
  | LT of (Mini_ml_types.sref)
  | LE of (Mini_ml_types.sref)
  | GT of (Mini_ml_types.sref)
  | GE of (Mini_ml_types.sref)
  | FUN of (Mini_ml_types.sref)
  | LET of (Mini_ml_types.sref)
  | REC of (Mini_ml_types.sref)
  | IN of (Mini_ml_types.sref)
  | IF of (Mini_ml_types.sref)
  | THEN of (Mini_ml_types.sref)
  | ELSE of (Mini_ml_types.sref)
  | AND of (Mini_ml_types.sref)
  | OR of (Mini_ml_types.sref)
  | NOT of (Mini_ml_types.sref)
  | EXP of (Mini_ml_types.sref)
  | LOG of (Mini_ml_types.sref)
  | SQRT of (Mini_ml_types.sref)
  | HD of (Mini_ml_types.sref)
  | TL of (Mini_ml_types.sref)
  | LEN of (Mini_ml_types.sref)
  | EOI of (Mini_ml_types.sref)
  | INT of (int*Mini_ml_types.sref)
  | FLOAT of (float*Mini_ml_types.sref)
  | OP of (string*Mini_ml_types.sref)
  | VAR of (string*Mini_ml_types.sref)

val main :
  (Lexing.lexbuf  -> token) -> Lexing.lexbuf -> Mini_ml_types.expression list
