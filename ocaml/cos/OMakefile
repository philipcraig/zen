.PHONY: clean

CREATE_SUBDIRS=true
SYS_ROOT=$(dir .)
SYS_BUILD= $(dir $(SYS_ROOT)/build)

if $(VERBOSE)
  #Possible values are Unix (for all Unix versions, including Linux
  #and Mac OS X), Win32 (for MS-Windows, OMake compiled with MSVC++ or
  #Mingw), and Cygwin (for MS-Windows, OMake compiled with Cygwin).
  println (*** OSTYPE=$(OSTYPE))
  println (*** OS_VERSION=$(OS_VERSION))
  println (*** SYSNAME=$(SYSNAME))
  println (*** MACHINE=$(MACHINE))
  println (*** TARGETS=$(TARGETS))
  println (*** OMAKE_VERSION=$(OMAKE_VERSION))
  println (*** OMAKEPATH=$(string $(OMAKEPATH)))
  println (*** VERBOSE=$(VERBOSE))

  #The directory where the OMake
  #standard library files reside. At startup, the default value is
  #determined as follows.  The value of the OMAKELIB environment
  #variable, if set (must contain an absolute path, if set), otherwise
  #On Windows, the registry keys
  #HKEY_CURRENT_USER\SOFTWARE\MetaPRL\OMake\OMAKELIB and
  #HKEY_LOCAL_MACHINE\SOFTWARE\MetaPRL\OMake\OMAKELIB are looked up and
  #the value is used, if exist.  Otherwise a compile-time default it
  #used. The current default value may be accessed by running omake
  #--version
  println (*** STDLIB=$(STDLIB))

  #OCaml configuration variables

  println (*** OCAMLC=$(OCAMLC))
  println (*** OCAMLOPT=$(OCAMLOPT))
  println (*** OCAMLDOC=$(OCAMLDOC))
  println (*** CAMLP4=$(CAMLP4))
  println (*** OCAMLLEX=$(OCAMLLEX))
  println (*** OCAMLLEXFLAGS=$(OCAMLLEXFLAGS))
  println (*** OCAMLYACC=$(OCAMLYACC))
  println (*** OCAMLYACCFLAGS=$(OCAMLYACCFLAGS))
  println (*** OCAMLDEP=$(OCAMLDEP))
  #Instead of using OCAMLDEP in a traditional make-style fashion, run
  #$(OCAMLDEP) -modules and then postprocess the output internally to
  #discover all the relevant generated .ml and .mli files. See Section
  #13.6.5 for more information on interactions between OMake, OCAMLDEP
  #and generated files. Set to $(OCAMLDEP_MODULES_AVAILABLE) by default.
  #OCAMLDEP_MODULES_ENABLED = 0
  println (*** OCAMLDEP_MODULES_ENABLED=$(OCAMLDEP_MODULES_ENABLED))
  println (*** OCAMLMKTOP=$(OCAMLMKTOP)) #Top-level compiler
  println (*** OCAMLLINK=$(OCAMLLINK)) #The OCaml bytecode linker (default $(OCAMLC))
  println (*** OCAML_LINK_FLAGS=$(OCAML_LINK_FLAGS)) #e.g. -cclib -lstdc++
  println (*** OCAMLINCLUDES=$(OCAMLINCLUDES)) #Search path to pass to the OCaml compilers (default .)
  println (*** OCAMLFIND=$(OCAMLFIND)) #Default ocamlfind if USE_OCAMLFIND is set, otherwise empty.
  println (*** OCAMLFINDFLAGS=$(OCAMLFINDFLAGS))
  println (*** OCAMLPACKS=$(OCAMLPACKS)) #Package names to pass to ocamlfind

  #C/C++ configuration variables

  println  (*** CC=$(CC))
  println  (*** CXX=$(CXX))
  println  (*** CPP=$(CPP))
  println  (*** CFLAGS=$(string $(CFLAGS)))
  println  (*** CXXFLAGS=$(string $(CXXFLAGS)))
  println  (*** INCLUDES=$(INCLUDES))
  println  (*** LIBS=$(LIBS))
  println  (*** AS=$(AS))
  println  (*** ASFLAGS=$(ASFLAGS))
  println  (*** AR=$(AR))
  println  (*** LD=$(LD))
  println  (*** LDFLAGS=$(LDFLAGS))
  println  (*** LDFLAGS_DLL=$(LDFLAGS_DLL))
  println  (*** YACC=$(YACC))
  println  (*** LEX=$(LEX))

  #Build system globals

  println (*** SYS_ROOT=$(SYS_ROOT))
  println (*** SYS_BUILD=$(SYS_BUILD))

#Funtion to harvest modules given a location
harvest_modules(loc)=
  return $(rootname $(file $(basename $(glob $(loc)/*.ml))))

vmount(-l, src, $(SYS_BUILD))
.SUBDIRS: $(SYS_BUILD)

#Definition of the pseudo-target clean
clean:
    rm -rf $(SYS_BUILD)
    rm -rf .omake* *.omc  config/*.omc $(HOME)/.omake* $(HOME)/.omc
